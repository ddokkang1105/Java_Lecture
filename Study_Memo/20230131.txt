
// 띄어쓰기 사용하고 싶을때
String feel = input.nextLine();

System.out.println("=================");
System.out.println("\\\0\0\0\0/\\\0\0/\\\0\0\0\0/");
System.out.println("\0)\0\0(\0\')(\'\0)\0\0(\0");
System.out.println("(\0\0/\0\0)\0\0(\0\0\\\0\0)");
System.out.println("\0\\(__)|\0\0|(__)/\0");
System.out.println("=================");

// = 
//	-> 대입연산자, 변수에 값을 지정할 때 사용
// A = B
//	-> B 를 A 에 넣어라

x += 2;
// x = x + 2;

x -= 2;
// x = x - 2;

x *= 2;
// x = x * 2;

x /= 2;
// x = x / 2;

x %= 2;
// x = x % 2;

// 형 변환 (type casting)
//		자료형을 바꾸는 행위
// 형 변환의 대표적인 예 float
// datatype name = (datatype) value;

// 자동형변환 예시
// double d = 9;
//		-> 출력은 9.0

// ~이고 : &&
// ~또는 : ||
// 결과를 부정할 때(NOT) : !
// XOR(eXclusive OR) : ^
//		-> 두 입력이 서로 다를 때 '1' 결과값을 출력 !

// A && B
// A || B

// 효율적이지 못한 코드 - 가능성
// boolean ride6 = (age > 3 && (height / 100) > 2);
// 보다 효울적인 코드
boolean ride6 = ((height / 100) > 2 && age > 3);
// 조건을 확인하여 && 함수를 사용할 때는 확률이 적은 것을 앞에다가 !!
// 반대로 || 는 확률이 높은 것을 앞에다가 !!
System.out.printf("ride6 탑승가능합니까? : %b\n", ride6);


// **String 비교**
// String은 Heap에 주솟값을 남기기 때문에
// 주솟값이 아닌 주솟값에 있는 데이터 값을 비교하기 위해서는
// (변수값).equals 를 사용하면 된다.

// Shift 연산자 찾아보기 !!

// Shift 연산자 : 다중 선택
// ( 십진수 << 정수 )의 형태
// 		<< : 앞에 있는 수(십진수)를 2진수로 바꾸고,
//			 뒤에 있는 수(정수)만큼 왼쪽으로 밀어라.
//			 비어있는(오른쪽) 칸 수를 0으로 채우고,
//			 2진수를 다시 10진수로 바꿔라.

// Ex>
// 24시간	1 << 0	:	1
// 와이파이	1 << 1	: 	2
// 흡연실	1 << 2	:	4
// 주차장	1 << 3	:	8

// A 매장 : 2 	-> 와이파이
// B 매장 : 8 	-> 주차장
// C 매장 : 13 	-> 24시간, 흡연실, 주차장
// D 매장 : 6 	-> 와이파이, 흡연실

// 연산자
//		단항 연산자 : a++; a--; !a
//		이항 연산자 : a + b, a > b
//		삼항 연산자 :
//					조건을 따져서 값을 대입할 때 사용
//					if문으로 대체가 가능하지만, 문법이 길어짐
//		(형태)		조건식 ? 조건을 만족할 때 쓸 값 : 조건불성립시 쓸 값


