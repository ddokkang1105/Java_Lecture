데이터베이스  : 데이터들의 집합 
ex> 영화예매시스템 

극장 / 상영 중인 영화 / 내가 보고 싶은 영화 / 시간 대 / 내가 원하는 좌석 / . . .

조건 검색들은 SQL이라는걸 활용해서 만들어진건데
	=> SQL을 다뤄볼 것 ! 

SQL이란 ? 
	Structured Query Language (구조적 질의 언어) 의 줄임말로
	DBMS(데이터베이스 관리시스템)에서 데이터를 관리, 처리하기 위해서 설계된 언어
	여기서 말하는 DBMS는 Database + Management System
	질의한다 ? -> 무엇을 ? -> '구조화' 되어있는 데이터를 ! 
	=> 이 형태를 한번 알아보자~ 가 목표가 되겠다 !!

데이터베이스에서는 대표적인 DBMS인 Oracle DB로 진행
데이터를 단순히 Windows와 같은 운영체제(OS - Operating System)의 자체 파일 (메모장, 그림판 등)
에 저장하게 되면 다른 사람의 접근이 쉬워지기 떄문에 그 파일을 삭제하거나, 내용을 수정하면,,,
킹받는 일이 발생,,,!
그러하여 ! DB를 사용해서, 관련이 없는 사람들에게 접근성이 어려운 데이터베이스 서버를 이용해서
저장하는 방식으로 보안성 강화에 도움이 되도록 할 것 ! 

그렇다면 왜 Oracle ?? => 부동의 1위 !!!
======================================================================
1. Oracle Install
Google - Oracle - 국가/지역 - United States - Search - xe prior - XE Prior Release Archive
 - Oracle Database 11gR2 Express Edition for Windows x64 - Download & Install !! 
 - Password Input - Finish ( Oracle Port Num : 1521 ) 
 -> DB 잘 돌아가나 확인 -> Windows Search -> 서비스 -> OracleSerciveXE, OracleXETNSListener 가 실행중 !!
======================================================================
2. 원격 접속이 되는 관리자 계정 만들기
[서버 담당]
	cmd - sqlplus / as sysdba 입력
	sqlplus	: ( OracleDB 접속 프로그램명 )
	/	: ( 현재 로그인한 OS의 계정을 쓰겠다는 의미 )
	as sysdba	

	create user [ID명] identified by [Password];	-> [] 빼고 !!
	grant connect, resource, dba to [ID명];
	=> 성공하면 각각
	'User created', 'Grant succeeded' 문구 나옴 !
	이렇게 하면 원격 관리가 가능해졌다 !!
======================================================================
[모두 다] - DB서버에 관리자로 접속 -> 자기 자신의 계정을 만들기 위해서
[모두 다] - OracleDB에 접속하려면 instantClient가 필요
		- oracle.com 사이트로 이동
		- Search - instant client - Instant Client for Microsoft Windows (x64) 64-bit 
		- Version 21.9.0.0.0 _ basic, sqlplus, jdbc 를 다운받아서 한 폴더에 압축해제

		- 압축해제한 폴더에서 cmd 
		[sqlplus ID/password@IP:PortNum/SID]		=> [] 빼고 !!
		ID : 관리자(DBA) 계정 ID
		PW : 관리자(DBA) 계정 PW
		IP : 관리자(DBA) 계정 IP / ipconfig 쳐서 확인
		PortNum : 1521
		SID : xe
		오류 뜰 시에 - Google - visual c++ - 64bit Install !
		Connected to: 어쩌고 => 연결 !!

		- 계정 생성
		create user [ID명] identified by [PW];
		grant connect, resource to [ID명];

		=> 성공하면 각각
		'User created', 'Grant succeeded' 문구 나옴 !
		=> 회사가면 사수가 계정을 만들어 줄 듯,,,?

		- 이 계정이 사용할 공간 (Tablespace) 만들기
			: 보안성 뛰어난, 기능이 강력한(네트워크) 파일ㄴ
[서버 담당] 폴더 하나 생성 (한글 X)
		create tablespace [TS명] datafile '[지정할경로/파일명.dbf]' size 500m;

		그 TS를 계정에게 부여
		alter user [ID] default tablespace [TS];

		-> 성공하면 각각 Tablespace created. / User altered. 라는 문구가 나옴
======================================================================
접속
	instantClient 있는 폴더에서 cmd
	sqlplus ID/PW@IP주소:PortNum/SID
======================================================================
create table student(name char, age number);	(테이블 생성)
desc student;		(테이블 확인)
drop table student cascade constraint purge;	(테이블 지우기)
======================================================================
우리는 11gR2 XE라는걸 설치해쓰음
오라클 서버는 크게 3단계로 진화를 했는데 i / g / c

-> 7i, 8i, 9i	
i로 끝나는 거 : Internet의 약자
	      데이터 베이스에 인터넷 환경을 지원하면서 i라는 용어가 붙기 시작

-> 10g, 11g
g로 끝나는 거 : Grid의 약자 / Grid Computing의 개념으로
	      여러 컴퓨터를 하나로 연결해 빠른 속도로 연산, 처리 작업

-> 12c, 13c, 19c, 21c 
c로 끝나는 거 : Cloud의 약자 / Cloud Computing의 개념으로
                    현재 IT업계에서 많이 이슈가 되고 있는 클라우드 기술을 접목
	       흐름에 따라 통합된 서비스에 접근 할 수 있도록 서비스를 제공

-> Database Standard Edition 2 (SE2) : 가장 기본적인 DB 제품
-> Database Enterprise Edition (EE) : 고사양 서버에서 사용 가능한 기업용 DB (유료)
			         SE2에서 지원되지 않는 옵션들을 지원해줌
-> Database Express Edition (XE) : 개발용, 교육용 등으로 무료사용이 가능한 DB
			      상업용도로 판매하는 것이 불가능 !!
======================================================================
eclipse DB 실행 환경 조성
Window - Show View - Other - Data Source Explorer
 - Database Connections 우클릭 - new - Oracle & 이름 설정 Next - 동그라미 모양 아이콘 클릭
 - Jar List - 기존에 있는거 삭제 - Add Jar/Zip - instantClient 있는 폴더에 있는 ojdbc8.jar - ok
 - SID : xe , Host : IP , PortNum : 1521 , User Name : XXX , PW : XXX  Input - Test Connection
======================================================================
-- 주석 !
-- DB를 사용하기 위해서 cmd에 접근할 수 있지만, SQL의 결과와 Query 검증 등을 위해서
-- 보통의 개발자들은 개발자 툴(tool)이라는 것을 사용함
-- DBeaver(디비버), Oracle - SQL Developer, MySQL - Workbench, ...
-- Eclipse로 먼저 사용해보고...

-- 용어 정리 !!
--	테이블(=릴레이션) : 데이터베이스에서 정보를 구분하여 저장하는 기본 단위
--						행과 열로 이루어진 데이터들의 집합 !
--	행(Row) : 테이블을 구성하는 데이터들 중 가로 부분 (→)
--			  튜플(Tuple) or 레코드(Record)라고도 부름
--	열(Column) : 테이블을 구성하는 데이터들 중 세로 부분 (↓)
--				필드(Field) or 속성(Attribute)라고도 부름
--	스키마(Schema) : 데이터베이스에서 기본 구조를 정의하는 것
--					 쉽게 말하자면 제목 부분 (이름, 나이, 성별)
--					 테이블의 헤더를 나타내며, 속성과 자료타입을 갖고 있음
--	인스턴스(Instance) : 테이블에서 실제로 저장된 데이터의 값
--	도메인(Domain) : 속성이 가질 수 있는 값의 집합
--					 특정 속성에서 사용할 데이터의 범위를 사용자가 정의
--						ex> p_age number(3) 면 정수를 3자리까지만 받겠다는 의미,
--							3자리를 넘어가면 값이 받아지지 않음
--						ex> p_name varchar2(10 char) 면 문자열을 최대 10글자까지만 받겠다는 의미, 
--							그 이상 넘어가면 값이 받아지지 않음

-- 사실은 한 줄이지만, 가독성을 위해서 줄을 바꿔놓은 상태 !
-- 여러 줄을 실행하고 싶다면 : 그 줄들을 다 드래그래서 (덮어서) -> alt + x ***
create table person(
	p_name varchar2(10 char),
	p_age number(3),
	p_gender varchar2(2 char)
);

-- 한 줄 실행 : 커서를 그 줄에 가져다 놓고 alt + s ***
insert into person values('홍길동', 10, '남');
insert into person values('홍길동', 10, '남');
insert into person values('김길동', 20, '여');
insert into person values('최길동', 30, '남');
insert into person values('최길동', 1000, '남');	-- 오류 !

select * from PERSON;
-- 테이블을 구성할 때 여러 조건들을 살펴야 하지만, 지금 만든 테이블 상황상
-- '홍길동'은 같은 인물임
-- 다른 인물일 수도 있겠지만, 지금의 조건만으로는 같은 인물이라고 판단하고...
-- 중복값은 없애고 한번만 출력하고 싶음

-- 중복 값 없애기 !
select distinct * from PERSON;

-- 테이블 지우기
drop table person cascade constraint purge;

-- 테이블(릴레이션)의 특징
-- 1. 속성은 단일 값만 가진다.
--		각 속성의 값은 도메인에 정의된 값만 가지며, 그 값은 모두 단일한 값이어야 함
--		ex> p_age : 최대 3자리 정수로 된 값만 가지며, 그 값은 여러개가 아닌 단 하나의 값이어야 !!
-- 2. 속성은 서로 다른 이름을 가진다.
--		각 속성마다 p_name, p_age, p_gender 라는 이름을 가지고 있다.
--		컬럼명은 중복해서 만들지 않기 !

-- ex> 컬럼명 중복 : 오류 !
create table test(
	t_no number(3);
	t_no varchar2(10 char)
);

-- 3. 한 속성의 값은 모~~두 같은 도메인 값을 갖는다.
--		1번이랑 같은 맥락으로 p_age : 최대 3자리 정수로 된 값을 가짐

-- 4. 속성의 순서는 상관없다.
--		속성의 순서가 달라도 테이블 스키마는 같음
-- ex>
select * from PERSON;
select p_age, p_gender, p_name from PERSON;
-- 순서만 바뀌었지 내용에는 변화가 없다 !

-- 5. 테이블 내의 중복된 튜플은 허용하지 않는다.
--		홍길동에 대한 정보가 한 번 더 들어가면 동일인물인지 다른인물인지 알 수가 없음
--		즉, 모든 튜플에는 차별성이 있어야 !! (생일을 추가한다거나, 핸드폰 번호를 추가한다거나)
-----------------------------------------------------------------------------------------------------------------
-- SQL 명령문의 종류 !@

-- 데이터 정의어 (DDL / Data Definition Language)
--		: 테이블이나 관계의 구조를 생성하는데 사용하며, 
--		  Create, Alter, Drop, ... 등이 있음  

-- 데이터 조작어 (DML / Data Manipulation Language)
--		: 테이블에 데이터를 검색, 삽입, 수정, 삭제 하는데 사용하며, 
--		  Select, Insert, Update, Delete 등이 있음 (줄여서 CRUD라고 함, create - insert, read - select) 
--		  Select문은 특별히 질의어(Query)라고 함

-- 데이터 제어어 (DCL / Data Control Language)
--			: 데이터베이스에 접근하고 객체들을 사용하도록 권한을 주고 회수하는데 사용하며, 
--				Grant, Revoke 등이 있음
--				제어어는 DBA(Database Administrator)의 업무라서 이정도만 알고 넘어가자 ~

-- 트랜잭션 처리어 (TCL / Transaction Control Language)
--			: DML에 의해 조작된 결과를 작업 단위(트랜잭션) 별로 제어하며 사용하며,
--				Commit, Rollback, Savepoint 등이 있음
-----------------------------------------------------------------------------------------------------------------
-- 그래서 SQL이라는 언어로 DB를 제어해볼건데
--		DB메이커가 달라도 SQL은 거의 비슷
--		대/소문자 구별하지 않음 -> 다 대문자로 받아들임
--		낙타체가 안통함(catAge) -> 뱀체로(cat_age)
--		데이터는 대소문자를 구별함 !! ***
--			"a"와 "A"는 다르다









