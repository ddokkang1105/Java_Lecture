// 절차지향 프로그래밍 (Procedural Programming)
//		순서대로 잘 프로그래밍해서 결과를 잘 내자 !
// 		변수 하나 덜 쓰고, 코드 줄이고.. 효율적으로 코드를 짰다 !
//		조건문, 반복문, ...
//		장점 : 처리속도, 실행속도가 빠르다.

// 객체지향 프로그래밍 (Object-Oriented Programming)
//		
//		객체(object) : 실생활에 존재하는 모~~~~~든 것 (흔히 물건이라고 말할 수 있는 것들)
//			( = 인스턴스(instance) : class에서 만들어진 객체를 해당 클래스의 인스턴스)

// 		붕어빵을 만드려면			붕어빵 틀이 필요 !
//		객체를 만드려면 			class 라는 것이 필요 !
//	객체를 사용해서 하나의 완성품을 만들어내는 프로그래밍 기법이
//		=> 객체지향 프로그래밍
//		=> 앞으로는 class를 엄청 만들 것 !

//	객체의 속성 : 멤버 변수(member variable, attribute, field)
// 	객체가 만들어질 때 각 자료형들의 기본값으로 자동으로 초기화 됨.

public class OMain1 {
	public static void main(String[] args) {
//		String cafeName = "발도스";
//		String cafeLocation = "학원 뒤";
//		double cafeDistance = 100.3;
//		
//		System.out.printf("카페 이름 : %s\n", cafeName);
//		System.out.printf("카페 위치 : %s\n", cafeLocation);
//		System.out.printf("거리 : %.1fm\n", cafeDistance);
		
		// 새로운 카페 하나 !
		Cafe c = new Cafe();
		
		

		
		
	}
}
