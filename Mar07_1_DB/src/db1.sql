-- 테이블 스페이스 함부로 지우지 말기 !

-- 드디어...! [테이블]을 만들어보자 !
-- 테이블의 기본적인 구조
create table 테이블명(
	컬럼명 자료형 [옵션], -- 옵션 : 필요하면 넣는거 / [] 넣는거 아님
	컬럼명 자료형,
	...
);

-- 자료형 (데이터타입)
-- 크게 3가지의 타입으로 나눌 수 있음

-- 문자형
--			char(용량)
--			무조건 그 용량대로 저장
--			용량이 비어있다면 띄어쓰기로 그 용량을 메꿈
--			처리 속도가 빠르다 ! (용량을 신경쓰지 않아도 되서)
--				ex> 성별, 주민번호, 핸드폰번호, ...

--			varchar2(용량)
--			정해진 용량만큼 데이터를 안 넣어도 
--			그 용량 조절해서 저장
--			용량을 조절하는만큼 처리속도가 느리다 !
--				ex> 이름, 주소, ... (가변되는 값, 정해지지 않은 값들)
--			주력으로 사용 !
-------------------------------------------------------------------------------------------------------------
-- 문자형 용량 
--		varchar2(5) : 5byte
--			영어, 숫자, 띄어쓰기는 1byte
--			한글 한글자는 3byte
--			글자수 계산하기가 애매...

--		varchar2(5 char)
--			한글/영어 5글자 -> 최대 15byte
--	=> 문자형 자료형을 쓸 때는 용량에 char를 넣어서 쓰자 !

create table test(
	t_name varchar2(5)
);

create table test2(
	t_name varchar2(5 char)
);

-- 문자형의 값을 넣을 때는 작은따옴표 사용해서 ! ***
insert into test values('가나다');		-- 용량초과로 인한 에러 발생 !
insert into test2 values('가나다');		-- 성공 !
drop table test cascade constraint purge;
drop table test2 cascade constraint purge;
-------------------------------------------------------------------------------------------------------------
-- 숫자형
--		NUMBER(P, S) : 십진수 기준
--			P : 정밀도 (Precision) / S : 범위 (Scale)
--				P는 소수점 기준 모든 유효숫자를 의미한다.
--				만약 P에 명시한 것보다 더 큰 숫자값을 입력하면 오류가 발생한다.
--				S가 양수면 소수점 이하, 음수면 소수점 이상(소수점 기준 왼쪽)
--				의 유효숫자 자릿수를 나타낸다.
--				S에 명시한 숫자 이상의 숫자를 입력하면, S에 명시한 숫자로 반올림 처리한다.
--				S가 음수면 소수점 기준 왼쪽 자릿수만큼 반올림한다.
--				P가 S보다 크면 S는 소수점 이하 유효숫자 자릿수를 나타낸다.
--			값이 123.54인데 
--			number(3)			-> 오류? 123?		/ 124 (S쪽은 명시하지 않아서 0이라 봐도 무방, 
--															P가 3이라서 소수점 첫자리에서 반올림)
--			number(3, 2)		-> 오류? 123.54?	/ 에러 (P가 3인데 유효숫자가 5자리여서 오류)
--			number(5, 2)		-> 123.54
--			number(7, 1)		-> 123.5
--			number(7, -1)		-> 123? 124?		/ 120 (S가 -1이라서 음수이므로 첫째짜리에서 반올림)


--		FLOAT(P) : NUMBER의 하위타입 + 이진수 기준
create table testNum(
	t_num number(5),
	t_flo float(5)
);
insert into TESTNUM values(12345, 12345);
select * from TESTNUM; -- 12345, 12000
drop table testNum cascade constraint purge;

--	float(5) 라고 하면, 5자리 10진수가 아니라, 5자리 2진수 (ex: 10110)을 의미한다.
--	2진수를 10진수로 변경을 하려면 약 0.3정도를 곱하면 되는데, 
-- 	5 * 0.3 = 약 1.5가 된다.
--	결국 float(5)는 실제로 float(2) (1.5를 반올림해서 2가 되었음)
--	12345 중 앞의 두자리 12만 제대로 나오고, 나머지는 0으로 채워진 상태
--			=> 사실상 오라클에서는 NUMBER형만 사용해도 되며,
--				크기 설정에 있어서 P와 S를 적절히 조절하면 됨 ! ***
-------------------------------------------------------------------------------------------------------------
-- 날짜형
--		Date : 연도, 월, 일, 시, 분, 초까지 입력 가능
--		Timestamp : 연도, 월, 일, 시, 분, 초, 밀리초까지 입력 가능
--	=> 주력은 Date !
--	java.util.Date / java.sql.Date
-------------------------------------------------------------------------------------------------------------



















